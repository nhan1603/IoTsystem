{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "liveNow": false,
  "links": [],
  "panels": [
    {
      "type": "row",
      "title": "Ingestion Overview",
      "collapsed": false,
      "gridPos": { "h": 1, "w": 24, "x": 0, "y": 0 },
      "panels": []
    },
    {
      "id": 1,
      "title": "Throughput (rows/s)",
      "type": "timeseries",
      "gridPos": { "h": 7, "w": 12, "x": 0, "y": 1 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        {
          "refId": "A",
          "expr": "sum(rate(iot_messages_processed_total{job=~\"$app\", instance=~\"$app_instance\"}[1m])) by (topic)",
          "legendFormat": "{{topic}}"
        }
      ],
      "fieldConfig": {
        "defaults": { "unit": "ops", "decimals": 0 },
        "overrides": []
      },
      "options": { "legend": { "displayMode": "list", "placement": "bottom" }, "tooltip": { "mode": "single" } }
    },
    {
      "id": 2,
      "title": "Received vs Processed vs Failed (rows/s)",
      "type": "timeseries",
      "gridPos": { "h": 7, "w": 12, "x": 12, "y": 1 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        { "refId": "A", "expr": "sum(rate(iot_messages_received_total{job=~\"$app\", instance=~\"$app_instance\"}[1m]))", "legendFormat": "received" },
        { "refId": "B", "expr": "sum(rate(iot_messages_processed_total{job=~\"$app\", instance=~\"$app_instance\"}[1m]))", "legendFormat": "processed" },
        { "refId": "C", "expr": "sum(rate(iot_messages_failed_total{job=~\"$app\", instance=~\"$app_instance\"}[5m]))", "legendFormat": "failed (5m)" }
      ],
      "fieldConfig": { "defaults": { "unit": "ops" }, "overrides": [] },
      "options": {
        "legend": { "displayMode": "list", "placement": "bottom" },
        "tooltip": { "mode": "multi" },
        "stacking": { "mode": "none", "group": "A" }
      }
    },
    {
      "type": "timeseries",
      "id": 3,
      "title": "Kafka Consumer Lag (max by partition)",
      "gridPos": { "h": 7, "w": 24, "x": 0, "y": 8 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        {
          "refId": "A",
          "expr": "max by (partition) (kafka_consumergroup_lag{consumergroup=~\"$kgroup\", topic=~\"$topic\"})",
          "legendFormat": "partition {{partition}}"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "short", "min": 0 }, "overrides": [] },
      "options": { "legend": { "displayMode": "list", "placement": "bottom" } }
    },
    {
      "type": "row",
      "title": "Batch Latency & Size",
      "collapsed": false,
      "gridPos": { "h": 1, "w": 24, "x": 0, "y": 15 },
      "panels": []
    },
    {
      "id": 4,
      "title": "Batch Latency p50 / p95 / p99 (s)",
      "type": "timeseries",
      "gridPos": { "h": 8, "w": 12, "x": 0, "y": 16 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        { "refId": "A", "expr": "histogram_quantile(0.50, sum(rate(batch_latency_seconds_bucket{job=~\"$app\", instance=~\"$app_instance\"}[5m])) by (le))", "legendFormat": "p50" },
        { "refId": "B", "expr": "histogram_quantile(0.95, sum(rate(batch_latency_seconds_bucket{job=~\"$app\", instance=~\"$app_instance\"}[5m])) by (le))", "legendFormat": "p95" },
        { "refId": "C", "expr": "histogram_quantile(0.99, sum(rate(batch_latency_seconds_bucket{job=~\"$app\", instance=~\"$app_instance\"}[5m])) by (le))", "legendFormat": "p99" }
      ],
      "fieldConfig": { "defaults": { "unit": "s", "min": 0 }, "overrides": [] },
      "options": { "legend": { "displayMode": "list", "placement": "bottom" } }
    },
    {
      "id": 5,
      "title": "Average Batch Size (records)",
      "type": "stat",
      "gridPos": { "h": 8, "w": 12, "x": 12, "y": 16 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        {
          "refId": "A",
          "expr": "sum(increase(batch_size_sum{job=~\"$app\", instance=~\"$app_instance\"}[5m])) / sum(increase(batch_size_count{job=~\"$app\", instance=~\"$app_instance\"}[5m]))",
          "legendFormat": "avg batch size (5m)"
        }
      ],
      "options": { "reduceOptions": { "calcs": ["lastNotNull"], "values": false }, "orientation": "horizontal", "text": {} },
      "fieldConfig": { "defaults": { "unit": "short", "decimals": 0 }, "overrides": [] }
    },
    {
      "id": 6,
      "title": "Batch Latency Heatmap (bucket rates)",
      "type": "heatmap",
      "gridPos": { "h": 8, "w": 24, "x": 0, "y": 24 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        {
          "refId": "A",
          "expr": "sum(rate(batch_latency_seconds_bucket{job=~\"$app\", instance=~\"$app_instance\"}[5m])) by (le)",
          "legendFormat": "{{le}}"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "ops" }, "overrides": [] },
      "options": { "heatmap": {} }
    },
    {
      "type": "row",
      "title": "PostgreSQL",
      "collapsed": false,
      "gridPos": { "h": 1, "w": 24, "x": 0, "y": 32 },
      "panels": []
    },
    {
      "id": 7,
      "title": "Active Connections by State",
      "type": "timeseries",
      "gridPos": { "h": 7, "w": 12, "x": 0, "y": 33 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        { "refId": "A", "expr": "sum(pg_stat_activity_count{datname=~\"$database\", instance=~\"$pg_instance\"}) by (state)", "legendFormat": "{{state}}" }
      ],
      "fieldConfig": { "defaults": { "unit": "short", "min": 0 }, "overrides": [] },
      "options": { "legend": { "displayMode": "list", "placement": "bottom" } }
    },
    {
      "id": 8,
      "title": "DB TPS (commits + rollbacks)",
      "type": "timeseries",
      "gridPos": { "h": 7, "w": 12, "x": 12, "y": 33 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        {
          "refId": "A",
          "expr": "sum(rate(pg_stat_database_xact_commit{datname=~\"$database\", instance=~\"$pg_instance\"}[5m]) + rate(pg_stat_database_xact_rollback{datname=~\"$database\", instance=~\"$pg_instance\"}[5m]))",
          "legendFormat": "txn/s"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "ops" }, "overrides": [] },
      "options": { "legend": { "displayMode": "hidden" } }
    },
    {
      "id": 9,
      "title": "Postgres Locks by Mode",
      "type": "timeseries",
      "gridPos": { "h": 7, "w": 12, "x": 0, "y": 40 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        { "refId": "A", "expr": "sum(pg_locks_count{datname=~\"$database\", instance=~\"$pg_instance\"}) by (mode)", "legendFormat": "{{mode}}" }
      ],
      "fieldConfig": { "defaults": { "unit": "short", "min": 0 }, "overrides": [] }
    },
    {
      "id": 10,
      "title": "PG Container Disk Writes (bytes/s)",
      "type": "timeseries",
      "gridPos": { "h": 7, "w": 12, "x": 12, "y": 40 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        {
          "refId": "A",
          "expr": "sum(rate(container_fs_writes_bytes_total{container=~\"$pg_container\"}[5m]))",
          "legendFormat": "writes"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "Bps", "min": 0 }, "overrides": [] }
    },
    {
      "type": "row",
      "title": "API & Runtime",
      "collapsed": false,
      "gridPos": { "h": 1, "w": 24, "x": 0, "y": 47 },
      "panels": []
    },
    {
      "id": 11,
      "title": "API CPU (core-seconds/s)",
      "type": "timeseries",
      "gridPos": { "h": 7, "w": 12, "x": 0, "y": 48 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        { "refId": "A", "expr": "sum(rate(process_cpu_seconds_total{job=~\"$app\", instance=~\"$app_instance\"}[5m]))", "legendFormat": "api" }
      ],
      "fieldConfig": { "defaults": { "unit": "none", "min": 0 }, "overrides": [] }
    },
    {
      "id": 12,
      "title": "API Memory (Go heap bytes)",
      "type": "timeseries",
      "gridPos": { "h": 7, "w": 12, "x": 12, "y": 48 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        { "refId": "A", "expr": "sum(go_memstats_alloc_bytes{job=~\"$app\", instance=~\"$app_instance\"})", "legendFormat": "alloc" }
      ],
      "fieldConfig": { "defaults": { "unit": "bytes", "min": 0 }, "overrides": [] }
    },
    {
      "id": 13,
      "title": "HTTP 5xx (errors/s)",
      "type": "timeseries",
      "gridPos": { "h": 7, "w": 12, "x": 0, "y": 55 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        { "refId": "A", "expr": "sum(rate(http_requests_total{job=~\"$app\", instance=~\"$app_instance\", status=~\"5..\"}[5m]))", "legendFormat": "5xx" }
      ],
      "fieldConfig": { "defaults": { "unit": "ops", "min": 0 }, "overrides": [] }
    },
    {
      "id": 14,
      "title": "Go GC Pause (avg seconds)",
      "type": "timeseries",
      "gridPos": { "h": 7, "w": 12, "x": 12, "y": 55 },
      "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
      "targets": [
        {
          "refId": "A",
          "expr": "sum(rate(go_gc_duration_seconds_sum{job=~\"$app\", instance=~\"$app_instance\"}[5m])) / sum(rate(go_gc_duration_seconds_count{job=~\"$app\", instance=~\"$app_instance\"}[5m]))",
          "legendFormat": "avg pause"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "s", "min": 0 }, "overrides": [] }
    }
  ],
  "refresh": "10s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": ["iot", "kafka", "postgres", "prometheus"],
  "templating": {
    "list": [
      {
        "name": "DS_PROM",
        "type": "datasource",
        "query": "prometheus",
        "current": {},
        "label": "Prometheus"
      },
      {
        "name": "app",
        "label": "App job",
        "type": "query",
        "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
        "query": "label_values(iot_messages_processed_total, job)",
        "refresh": 1,
        "includeAll": true,
        "multi": true
      },
      {
        "name": "app_instance",
        "label": "App instance",
        "type": "query",
        "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
        "query": "label_values(iot_messages_processed_total, instance)",
        "refresh": 1,
        "includeAll": true,
        "multi": true
      },
      {
        "name": "kgroup",
        "label": "Kafka group",
        "type": "query",
        "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
        "query": "label_values(kafka_consumergroup_lag, consumergroup)",
        "refresh": 1,
        "includeAll": true,
        "multi": false
      },
      {
        "name": "topic",
        "label": "Topic",
        "type": "query",
        "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
        "query": "label_values(kafka_consumergroup_lag, topic)",
        "refresh": 1,
        "includeAll": true,
        "multi": true
      },
      {
        "name": "database",
        "label": "Postgres DB",
        "type": "query",
        "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
        "query": "label_values(pg_stat_database_xact_commit, datname)",
        "refresh": 1,
        "includeAll": false,
        "multi": false
      },
      {
        "name": "pg_instance",
        "label": "PG instance",
        "type": "query",
        "datasource": { "type": "prometheus", "uid": "${DS_PROM}" },
        "query": "label_values(pg_up, instance)",
        "refresh": 1,
        "includeAll": false,
        "multi": false
      },
      {
        "name": "pg_container",
        "label": "PG container (cAdvisor)",
        "type": "custom",
        "query": "pg",
        "current": { "text": "pg", "value": "pg" }
      }
    ]
  },
  "time": { "from": "now-6h", "to": "now" },
  "timepicker": {
    "refresh_intervals": ["5s","10s","30s","1m","5m","10m","30m","1h"]
  },
  "timezone": "",
  "title": "IoT Ingestion & DB Observability",
  "uid": "iot-ingest-db",
  "version": 1,
  "weekStart": ""
}
